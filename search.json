[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "",
    "text": "Motivation\nVideo games have grown into a dominant field of entertainment. The techniques advances and increasingly diverse forms facilitate the extension field of video games. As video game players we are interested in exploring the changes and developments of video games in recent years.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "index.html#research-question",
    "href": "index.html#research-question",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "Research Question",
    "text": "Research Question\nWe were investigating what variables affect the price of video games on steam? The variables we used were developer, median and average playtime, metascore, and release date.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "index.html#back-ground",
    "href": "index.html#back-ground",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "Back Ground",
    "text": "Back Ground\nThis data is from Steam Spy which uses an application programming interface (API) to track activity on the gaming platform Steam. Both Steam and Steam Spy are owned by Valve, a game developer and publisher, both Steam and Steam Spy track other games of other developers and publishers.\nThe Metascore is a weighted average score of reviews from professional critics that reflects the overall critical reception of a movie, video games or albums. The Metascore is ranging from 0 to 100, and higher scores indicate more positive reviews.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "Data",
    "text": "Data\nWe found this data set from Tidytuesday, originally this data was collected by Liza Wood using Steam Spy. Steam spy collects data from the games on Steam. This data was collected in July of 2019. The data set includes information for 26688 games, and for each game, there are 10 different variables: the game number, the game title, released date, price in US dollars, the estimate number of people owning this game, company that developed the game, company that published the game, average playtime, median playtime, and Metascore rating. The data is well organized, so we don’t need to clean a lot before exploring. The only concern is the missing data in the cells.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "index.html#data-insights",
    "href": "index.html#data-insights",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "Data Insights",
    "text": "Data Insights\n\n\n\n\n\n\n\n\nFor most of the developers, the average playtimes of their games are around 0, which might be because of the difficulty to record the playtime from the players. There is a positive correlation between the price and average playing time so that we expect the average price of a company’s game would be higher if the average playtime of this company is higher.\n\n\n\n\nEach point represent one game developer\n\n\n\n\n\n\n\nEach point represent one game developer\n\n\n\nThere is also a positive relationship between average Metascore and average game price of companies. All the companies have average Metascore greater than 40, except one company with average Metascore 23. Interestingly, there is a negative correlation between the average price of a company’s games and the number of games a company develops. This means that if a company developed more games, the expectation for the average price of games that this company developed would be lower. We also created a shiny app so that people can explore and play around with the data by themselves! Click here to open the Shiny app\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOne interesting finding of our analysis is that there is a significant spike in game price and production in 2012/2013, the increase has steadily continued since. We can also see that since 2012/2013 games are getting more expensive but are being rated less. However, because there are more games being produced the average price of games is going down, this makes sense the total price of games per year is increasing because there are more games produced but the average is going down because of the same increase in games production. Overall there are more games being produced, the total price of games is increasing, but they are not necessarily getting “better”.\n\n\n\n\n\n\n\n\n\n\n\n\nFor each year, we take the average price of games that were released in this year\n\n\n\nThe plot shows an overall increasing trend of average price of games between 2004 and 2013, especially the remarkable increase from 2012 to 2013. However the price of games dropped significantly after 2013. The average Metascore also decreased after 2013 compared to years between 2004 and 2013.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "Conclusion",
    "text": "Conclusion\nIn 2012 Steam Greenlight, a feature that allowed users to vote on which games were to be released on steam, was added to the platform. This meant that more games were able to be released because of the backing by the community. In 2013 Linux came to steam adding a new system to steam and bringing in new players. These might be the reason why the total amount of game increases rapidly after 2013.\nWe can also make the conclusion that the the price of video game is relative to metascore, the number of games a company produced and the average playtime.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "index.html#limitations-and-future-work",
    "href": "index.html#limitations-and-future-work",
    "title": "Lego Starwars Clone Wars: Are Video Games worth it?",
    "section": "Limitations and Future Work",
    "text": "Limitations and Future Work\nThe many zeros in the median and average playtime made our research difficult as any analysis using those variables were heavily skewed. The games that say that they have zero playtime do still have reviews and owners, so people are playing them. We theorize that this discrepancy is because steam cannot track the playtime for some games or that many people refrain from logging their playtime in steam. Finding a dataset that has a more indepth look at playtime might help us have a better and more accurate understanding. Another limitation of our dataset was that the “owners” variable was confusing, instead of giving a clear answer on how many people owned the game they gave a very rough estimate that ranged from 0-100,000 owners. We were unable to do anything with this variable because of its confusing and unhelpful nature. Another limitation is that this dataset is only taking data from steam, therefore the generalizability of this dataset is lower. For example some games are only publisher exclusives and therefore are not on steam. There may be a game publisher who is publishing games exclusively on their own platform and, with its addition to steam, would affect our dataset greatly.\nHere is our presetation and video that you can look at:\n\n\nClick here to watch the video",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Are Video Games worth it?</span>"
    ]
  },
  {
    "objectID": "src/et/macartney-w.html",
    "href": "src/et/macartney-w.html",
    "title": "2  Macartney Walker",
    "section": "",
    "text": "Kevan, Mike. “Navigating Teamwork as an Introvert: Strategies for Collaboration.” Linkedin, 04 September 2023, https://www.linkedin.com/pulse/navigating-teamwork-introvert-strategies-mike-kevan. Accessed 10 May 2025.\nIntroverted traits are not necessarily detrimental to teamwork, some can even be assets. Embracing introverted traits can help the team, by letting you work at your best, and help the team, by bringing new teamwork styles. It is important to communicate with those you are working with about your introverted traits so that you can plan and adapt around those traits. This might mean changing how your team works. It is important to be open minded and adaptable.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Macartney Walker</span>"
    ]
  },
  {
    "objectID": "src/et/lucia-l.html",
    "href": "src/et/lucia-l.html",
    "title": "3  Lucia Luo",
    "section": "",
    "text": "4 The importance of teamwork (as proven by science)\nhttps://www.atlassian.com/blog/teamwork/the-importance-of-teamwork\nThis article claims that effective teamwork offers significant benefits other than financial gains. Research shows that collaborative problem-solving leads to better outcomes. Collaborative efforts enable task division based on individual strengths, resulting in faster and more effective outcomes. People are more likely to take calculated risks that lead to innovation if they have the support of a team behind them. Working in a team encourages personal growth, increases job satisfaction, and reduces stress.",
    "crumbs": [
      "Effective Teamwork",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lucia Luo</span>"
    ]
  },
  {
    "objectID": "src/EDA/macartney-w.html",
    "href": "src/EDA/macartney-w.html",
    "title": "\n4  Macartney Walker\n",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(dplyr)\nvideo_games &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2019/2019-07-30/video_games.csv\")\n\nRows: 26688 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): game, release_date, owners, developer, publisher\ndbl (5): number, price, average_playtime, median_playtime, metascore\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nmonth_order &lt;- c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\")\nvideo_games_2 &lt;- video_games |&gt;\n   na.omit() |&gt;\n  separate(release_date, c(\"Month\", \"Day\", \"Year\"), sep = \" \") |&gt;\n  mutate(Month = factor(Month, levels = month_order, ordered = TRUE)) \n\nWarning: Expected 3 pieces. Missing pieces filled with `NA` in 8 rows [392, 419, 454,\n482, 503, 507, 512, 1459].\n\nvideo_games_3 &lt;- video_games_2 |&gt;\ngroup_by(developer) |&gt;\n  mutate(games_per_developer = n()) |&gt;\n  filter(games_per_developer &gt; 10) |&gt;\n  arrange(desc(games_per_developer)) \n\nvideo_games_price &lt;- video_games_3 |&gt;\n   na.omit() |&gt;\n  mutate(avg_price = mean(price)) |&gt;\n  group_by(developer) |&gt;\n  mutate(games_per_dev = n()) |&gt;\n  mutate(avg_price_per_dev = mean(price))\n\n\nggplot(video_games_3, aes(x = Year, fill = developer)) +\n  geom_bar() +\n  scale_fill_viridis_d() +\n  labs(title = \"The amount of games produced by top 10 developers.\", x = \"Year\", y = \"Amount of games\", color = \"Developer\", caption = \"Data from Tidytuesday(2019-07-30)\")",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Macartney Walker</span>"
    ]
  },
  {
    "objectID": "src/EDA/lucia-l.html",
    "href": "src/EDA/lucia-l.html",
    "title": "\n5  Lucia Luo\n",
    "section": "",
    "text": "library(tidytuesdayR)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(arsenal)\n\n\nAttaching package: 'arsenal'\n\nThe following object is masked from 'package:lubridate':\n\n    is.Date\n\nlibrary(ggplot2)\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(viridis)\n\nLoading required package: viridisLite\n\nvideo_games &lt;- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2019/2019-07-30/video_games.csv\")\n\nRows: 26688 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): game, release_date, owners, developer, publisher\ndbl (5): number, price, average_playtime, median_playtime, metascore\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n#EDA\nhead(video_games)\n\n# A tibble: 6 × 10\n  number game     release_date price owners developer publisher average_playtime\n   &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;        &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;                &lt;dbl&gt;\n1      1 Half-Li… Nov 16, 2004  9.99 10,00… Valve     Valve                  110\n2      3 Counter… Nov 1, 2004   9.99 10,00… Valve     Valve                  236\n3     21 Counter… Mar 1, 2004   9.99 10,00… Valve     Valve                   10\n4     47 Half-Li… Nov 1, 2004   4.99 5,000… Valve     Valve                    0\n5     36 Half-Li… Jun 1, 2004   9.99 2,000… Valve     Valve                    0\n6     52 CS2D     Dec 24, 2004 NA    1,000… Unreal S… Unreal S…               16\n# ℹ 2 more variables: median_playtime &lt;dbl&gt;, metascore &lt;dbl&gt;\n\n# video_games %&gt;%\n#   tableby( ~ ., data = .) %&gt;%\n#   summary()\n\n\nThere are 26,688 rows and 10 columns in this data (26,688 observations and 10 variables). I ran tableby() before, but there are too many things so I didn’t show the results.\n\n\n#Plots\n\nvideo_games_deve &lt;- video_games %&gt;%\n  group_by(developer) %&gt;%\n  summarize(num_games = n(),\n            avg_score = mean(metascore, na.rm = TRUE),\n            avg_price = mean(price, na.rm = TRUE),\n            avg_time = mean(average_playtime, na.rm = TRUE),\n            med_time = mean(median_playtime, na.rm = TRUE))%&gt;%\n  filter(num_games &gt;= 5,\n         !is.nan(avg_score),\n         !is.na(developer))\n\n\n\nvideo_games_deve %&gt;% arrange(avg_score)\n\n# A tibble: 195 × 6\n   developer              num_games avg_score avg_price avg_time med_time\n   &lt;chr&gt;                      &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 Team 6 Studios                 7      23        4.56        0        0\n 2 Idea Factory                   8      45       21.2         0        0\n 3 Digital Fusion Inc.            5      46        2.79        0        0\n 4 3000AD                         5      47        9.99        0        0\n 5 Jujubee S.A.                   5      47       13.8         0        0\n 6 Krome Studios                  7      49       12.7         0        0\n 7 Nomad Games                    7      51        7.42        0        0\n 8 Wastelands Interactive         7      52.5     15.7         0        0\n 9 Studio Saizensen               6      53       20.3         0        0\n10 City Interactive               5      53.5      3.04        0        0\n# ℹ 185 more rows\n\n#Price vs. score\nvideo_games_deve %&gt;%\n  ggplot(aes(x = avg_score, y = avg_price, color = num_games))+\n  geom_point()+\n  geom_smooth(se = FALSE, method = \"lm\",color = \"red\")+\n  labs(x = \"Average Metascore\", y = \"Average Price\", color = \"number of games\")+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n#Price vs. play time\nvideo_games_deve %&gt;%\n  ggplot(aes(x = avg_time, y = avg_price, color = num_games))+\n  geom_point()+\n  geom_smooth(se = FALSE, method = \"lm\",color = \"red\")+\n  labs(x = \"Average Play Time\", y = \"Average Price\", color = \"number of games\")+\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range (`stat_smooth()`).\nRemoved 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\nvideo_games %&gt;% \n  na.omit() %&gt;%\n  ggplot(aes(x = price, y = metascore))+\n  geom_point()+\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n\n\n\n\n\n\n\nvideo_games %&gt;% \n  filter(average_playtime &gt; 100,\n         !is.na(metascore))%&gt;%\n  ggplot(aes(x = metascore, y = average_playtime))+\n  geom_point()+\n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nvideo_games_deve %&gt;%\n  ggplot(aes(x = avg_time, y = avg_price, size = num_games))+\n  geom_point(alpha = 0.7)+\n  geom_smooth(se = FALSE, method = \"lm\",color = \"red\", show.legend = FALSE)+\n  scale_size_continuous(range = c(2, 10))+\n  labs(x = \"Average Play Time\", \n       y = \"Average Price\", \n       size = \"Number of Games\",\n       title = \"Price relative to Play Time\")+\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: The following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\nEach point represent one game developer\n\n\n\n\nvideo_games_deve %&gt;%\n  ggplot(aes(x = avg_score, y = avg_price, size = num_games)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(se = FALSE, method = \"lm\", color = \"red\", show.legend = FALSE) +\n  scale_size_continuous(range = c(2, 10))+\n  labs(x = \"Average Metascore\", \n       y = \"Average Price\", \n       size = \"Number of Games\",\n       title = \"Price relative to Metascore\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: The following aesthetics were dropped during statistical transformation: size.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\nEach point represent one game developer\n\n\n\n\nvideo_games %&gt;%\n  separate(release_date, c(\"month_date\", \"year\"), sep = \", \") %&gt;%\n  group_by(year) %&gt;%\n  summarize(avg_price = mean(price, na.rm = TRUE),\n            avg_score = mean(metascore, na.rm = TRUE),\n            .groups = 'drop') %&gt;%\n  na.omit() %&gt;%\n  mutate(year = as.numeric(year)) %&gt;% # Convert year to numeric\n  ggplot(aes(x = year, y = avg_price, color = avg_score)) +\n  geom_point() +\n  geom_line() +\n  scale_color_viridis_c(option = \"plasma\")+\n  labs(\n    title = \"Average Video Game Price Over Time\",\n    x = \"Year\",\n    y = \"Average Price\",\n    color = \"Average Metascore\"\n  ) +\n  theme_minimal()\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 41 rows [746, 768, 815,\n856, 930, 975, 996, 1003, 1015, 1021, 1140, 1845, 2590, 3146, 3353, 3887, 3933,\n4296, 4389, 5887, ...].\n\n\n\n\nFor each year, we take the average price of games that were released in this year\n\n\n\n\nvideo_games %&gt;%\n  separate(release_date, c(\"month_date\", \"year\"), sep = \", \") %&gt;%\n  group_by(year) %&gt;%\n  summarize(sum_price = sum(price, na.rm = TRUE), .groups = 'drop') %&gt;%\n  na.omit() %&gt;%\n  mutate(year = as.numeric(year)) %&gt;% # Convert year to numeric\n  ggplot(aes(x = year, y = sum_price)) +\n  geom_point() +\n  geom_line() +\n  labs(\n    title = \"Total Video Game Price Over Time\",\n    x = \"Year\",\n    y = \"Total Price\"\n  ) +\n  theme_minimal()\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 41 rows [746, 768, 815,\n856, 930, 975, 996, 1003, 1015, 1021, 1140, 1845, 2590, 3146, 3353, 3887, 3933,\n4296, 4389, 5887, ...].\n\n\n\n\n\n\n\nvideo_games %&gt;%\n  separate(release_date, c(\"month_date\", \"year\"), sep = \", \") %&gt;%\n  group_by(year) %&gt;%\n  summarize(num_games = n(), .groups = 'drop') %&gt;%\n  na.omit() %&gt;%\n  mutate(year = as.numeric(year)) %&gt;% # Convert year to numeric\n  ggplot(aes(x = year, y = num_games)) +\n  geom_point() +\n  geom_line() +\n  labs(\n    title = \"Number of Video Games Over Time\",\n    x = \"Year\",\n    y = \"Number of Games\"\n  ) +\n  theme_minimal()\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 41 rows [746, 768, 815,\n856, 930, 975, 996, 1003, 1015, 1021, 1140, 1845, 2590, 3146, 3353, 3887, 3933,\n4296, 4389, 5887, ...].\n\n\n\n\n\n\n\nvideo_games %&gt;%\n  separate(release_date, c(\"month_date\", \"year\"), sep = \", \") %&gt;%\n  group_by(year) %&gt;%\n  summarize(num_games = n(),\n            avg_score = mean(metascore, na.rm = TRUE),\n            .groups = 'drop') %&gt;%\n  na.omit() %&gt;%\n  mutate(year = as.numeric(year)) %&gt;% # Convert year to numeric\n  ggplot(aes(x = year, y = avg_score)) +\n  geom_point() +\n  geom_line() +\n  labs(\n    title = \"Average Metascore Over Time\",\n    x = \"Year\",\n    y = \"Score\"\n  ) +\n  theme_minimal()\n\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 41 rows [746, 768, 815,\n856, 930, 975, 996, 1003, 1015, 1021, 1140, 1845, 2590, 3146, 3353, 3887, 3933,\n4296, 4389, 5887, ...].\n\n\n\n\n\n\n\npbeta(30/50, 38+ 1957/3125, 12 + 618/3125) - pbeta(20/50, 38+\n1957/3125, 12 + 618/3125)\n\n[1] 0.007113252\n\n\n\nThe average price of game decrease since 2013, but the amount of games increased significantly",
    "crumbs": [
      "EDA",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lucia Luo</span>"
    ]
  },
  {
    "objectID": "src/appx/proposal.html",
    "href": "src/appx/proposal.html",
    "title": "Appendix A — Proposal",
    "section": "",
    "text": "Title: Analysis on Video Game Price.\nNames: Macartney Walker, Lucia Luo\nDescription: We’ll explore the video games dataset that include information for 26,688 different video games. We will focus on the relationship between the release time of the games, Metascore, price, and the publisher.\nReasons: We are both interested in video games.\nPlan: Examine the data set, think about our research questions, make some plots, work on ppt and paper.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Proposal</span>"
    ]
  },
  {
    "objectID": "src/appx/case-study.html",
    "href": "src/appx/case-study.html",
    "title": "Appendix B — Case Study",
    "section": "",
    "text": "Lucia: Twin Cities police(Twin Cities police use physical force at rates well above national average) The article starts with a clear and strong title so that the reader can be attracted to the article and understand the purpose of this article. At the beginning, they talk about the change of physical force throughout the years and comparing Minneapolis to the whole country, and they also mention specific examples. They use two plots to support its claims and also talk about the source of data to show the reliability of their results. They also use the large numbers and the increase of numbers to tell the readers that what they are talking about is vital and should be noticed.\nMacartney: Both of the plots are professional and easy to understand. The first one compares the rates of force between Saint Paul and Minneapolis, it clearly connects to, and exemplifies what the author talks about in the previous paragraph. The second plot compares Saint Paul and Minneapolis rates of force to other American cities. This plot is easier to understand than the author’s writing, it also helps give the reader a scale and comparison to other cities.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Case Study</span>"
    ]
  }
]